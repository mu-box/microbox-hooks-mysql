#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gomicro/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

include Hooky::Mysql
config = converge( CONFIG_DEFAULTS, payload[:config] || {} )

dedicated = payload[:component][:dedicated] || false

total_mem = `vmstat -s | grep 'total memory' | awk '{print $1}'`.to_i
cgroup_mem = `cat /sys/fs/cgroup/memory/memory.limit_in_bytes`.to_i
memcap = [ total_mem / 1024, cgroup_mem / 1024 / 1024 ].min

directory '/data/etc/flip'

template '/data/etc/flip/flip.conf' do
  mode 0644
  variables ({
    payload: payload
  })
end

if ["default", "primary", "secondary"].include? payload[:member][:role]

  # set my.cnf
  template '/data/etc/my.cnf' do
    source 'my-galera.cnf.erb'
    mode 0644
    variables ({
      payload: payload,
      config: config,
      type:    'mysql',
      memcap:  memcap,
      dedicated: dedicated,
      version: version(),
      plugins: plugins(config)
    })
    owner 'gomicro'
    group 'gomicro'
  end

  template '/data/bin/start-mysql.sh' do
    source 'start-mysql.sh.erb'
    owner 'gomicro'
    group 'gomicro'
    mode 0755
    variables ({
      payload: payload
    })
  end

elsif "arbitrator" == payload[:member][:role]
  template '/data/bin/start-garbd.sh' do
    owner 'gomicro'
    group 'gomicro'
    mode 0755
    variables ({
      payload: payload
    })
  end

end
